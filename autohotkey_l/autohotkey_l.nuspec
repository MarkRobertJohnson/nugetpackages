<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>autohotkey_l</id>
    <version>1.1.10.00</version>
    <title>AutoHotKey_L</title>
    <authors>Lexikos</authors>
    <owners>Anthony Mastrean</owners>
    <licenseUrl>http://l.autohotkey.net/docs/license.htm</licenseUrl>
    <projectUrl>http://www.l.autohotkey.net/</projectUrl>
    <iconUrl>https://github.com/Lexikos/AutoHotkey_L/raw/master/source/resources/icon_main.ico</iconUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <description>AutoHotkey is a free, open source macro-creation and automation software utility that allows users to automate repetitive tasks. It is driven by a custom scripting language that is aimed specifically at providing keyboard shortcuts, otherwise known as hotkeys.

AutoHotkey_L is a fork of AutoHotkey which adds a long list of new features and fixes some bugs. Anything that can be done with AutoHotkey can also be done with AutoHotkey_L. Scripts written for AutoHotkey will also run on AutoHotkey_L, with some exceptions (see Warning below).

Commonly-used features include:
* #if expression allows context-sensitive hotkeys to be activated based on whether an expression is true or false.
* Unicode and x64 support for greater portability; Unicode is a must-have for international users.
* COM and ActiveX support, allowing scripts to access many other automation technologies.
* Built-in array support simplifies dealing with lists of values and other data structures.
* Support for icons in menus and numerous enhancements to the Gui commands.
* New built-in variables, functions and other enhancements; read more.

Many more optional features are aimed at experienced users:
* New control flow statements and language capabilities such as Loop..Until, named loops and variadic functions.
* Optional warnings, #Include (Lib) and the local function library are especially useful for larger projects.
* Step through code line by line, inspect variables and more, with interactive debugging features.
* Objects can be used as simple data containers, or behaviour can be customized by scripts.
* Try..Catch and Throw for structured exception handling.</description>
    <summary>AutoHotkey is a free, open source macro-creation and automation software utility that allows users to automate repetitive tasks. It is driven by a custom scripting language that is aimed specifically at providing keyboard shortcuts, otherwise known as hotkeys.</summary>
    <releaseNotes>
1.1.08.01 - August 3, 2012
Debugger: Fixed max_depth being either half the intended limit or unlimited.

1.1.08.00 - July 14, 2012
Breaking changes:
Changed the default script codepage to ANSI, as the previous behaviour was a common source of confusion. UTF-8 files must now have a byte order mark (BOM) to be recognized correctly. Notepad adds a BOM to any file saved as UTF-8.
Changed return x to preserve formatting of numeric strings; it is now equivalent to return (x).
Changed Gui, Name: New to set the new GUI as the default.

Other changes:
Changed ClipboardAll to prefer CF_UNICODETEXT over other text formats.
Changed Gui Show to allow floating-point numbers.
Changed A_OSVersion to return WIN_8 on Windows 8.
Changed AutoHotkey.exe file description to include "ANSI/Unicode 32/64-bit".
Changed the parser to allow lines like new MyObject() with no assignment.
Upgraded PCRE to 8.30.
Improved wording of some warnings and added a pointer to the documentation at the bottom of the warning dialog.
Improvements to the debugger:
Added basic support for inspecting Func, ComObject and RegExMatchObject objects.
Fixed the "attach debugger" message being ignored in some situations. See commit 83f0a0e.

New features:
Added support for the PCRE construct (*MARK:NAME) via RegExMatchObject.Mark.
Added support for classvar.x := y assignments in class definitions (after declaring classvar).
Added A_Is64bitOS.
Added SetRegView and A_RegView.

Fixes:
Fixed Func.() to merely skip the function call if mandatory parameters were omitted instead of causing the thread to silently exit.
Fixed Object.Remove() not releasing object keys.
Fixed key-down/key-up hotkey pairs to suppress input correctly when only one hotkey in the pair is enabled.
Fixed #Include (Lib) to not affect the working directory used by subsequent #include directives.
Fixed objaddref() acting like ObjRelease() when called with a lower-case 'a'.
Fixed A_AhkPath in 32-bit compiled scripts to detect 64-bit AutoHotkey installations and vice versa.
Fixed TreeView controls with -Background option rendering incorrectly on older OSes.
Fixed error messages shown during execution of While/Until to identify the appropriate line.
    </releaseNotes>
    <tags>automation hotkeys scripting windows</tags>
  </metadata>
  <files>
    <file src="tools\chocolateyInstall.ps1" target="tools\chocolateyInstall.ps1" />
  </files>
</package>